#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{pgf}
\usepackage{tikz}
\usepackage{amssymb}
\usetikzlibrary{arrows,automata}
\usepackage{times}
\usepackage{fancyhdr}
\usepackage[mathcal]{euscript}
%Wandelt alle frac zu dfrac um. Sieht besser aus.%
%\let\frac\dfrac%
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagestyle{fancy} 
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
headheight}{35pt} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[R]{Felix Bayer - 607241
\backslash

\backslash
Nico Kohlmorgen - 607490
\backslash

\backslash
Justin Neumann - 617626 
\backslash

\backslash
Markus Richter - 614027} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[C]{Gruppe 3} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[L]{Theoretische Informatik 
\backslash

\backslash
 
\backslash
today}
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Theoretische Informatik
\end_layout

\begin_layout Section*
Übungsblatt 10
\end_layout

\begin_layout Subsection*
Aufgabe 10.1 Reduktion
\end_layout

\begin_layout Standard
\begin_inset Formula $f:\{0,1,\#\}^{*}\rightarrow\{0,1\}^{*}$
\end_inset

, offenbar ist 
\begin_inset Formula $f$
\end_inset

 total und berechenbar.
\end_layout

\begin_layout Standard
\begin_inset Formula $zz:$
\end_inset

 Halteproblem 
\begin_inset Formula $HP$
\end_inset

 lässt sich mittels Funktion 
\begin_inset Formula $f$
\end_inset

 auf das Problem 
\begin_inset Formula $SH=\{w\,|\, M_{w}$
\end_inset

 hält bei Eingabe 
\begin_inset Formula $w$
\end_inset

 an
\begin_inset Formula $\}$
\end_inset

 reduzieren, also 
\begin_inset Formula $HP\leq SH$
\end_inset

:
\end_layout

\begin_layout Standard
Wir nehmen dazu an, dass 
\begin_inset Formula $SH$
\end_inset

 entscheidbar ist, um dann zu folgern, dass auch 
\begin_inset Formula $HP$
\end_inset

 entscheidbar sein müsste, was ein Widerspruch ist.
 Wir nehmen also an, dass 
\begin_inset Formula $SH$
\end_inset

 entscheidbar ist, dann lässt sich 
\begin_inset Formula $HP$
\end_inset

 durch 
\begin_inset Formula $M_{w}$
\end_inset

entscheiden.
\end_layout

\begin_layout Standard
\begin_inset Formula $M_{w}$
\end_inset

 erhält die Eingabe 
\begin_inset Formula $w\#x$
\end_inset

,
\begin_inset Formula $\, w\in CODES$
\end_inset

, wobei 
\begin_inset Formula $w$
\end_inset

 
\begin_inset Formula $M_{w}$
\end_inset

 kodiert.
 Die Funktion 
\begin_inset Formula $f$
\end_inset

 transformiert 
\begin_inset Formula $w\#x$
\end_inset

 in 
\begin_inset Formula $w'$
\end_inset

, wobei 
\begin_inset Formula $w'$
\end_inset


\begin_inset Formula $M_{w'}$
\end_inset

 kodiert.
 Bzgl.
 der Funktionsweise von 
\begin_inset Formula $M_{w'}$
\end_inset

 siehe Angabe.
\end_layout

\begin_layout Standard
Da nun 
\begin_inset Formula $M_{w'}$
\end_inset

 
\begin_inset Formula $M_{w}$
\end_inset

 simulieren kann muss noch gezeigt werden, dass 
\begin_inset Formula $M_{w}$
\end_inset

 tatsächlich 
\begin_inset Formula $HP$
\end_inset

 entscheidet: 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $w\#x\in HP$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Leftrightarrow M_{w}$
\end_inset

 hält für Eingabe 
\begin_inset Formula $x$
\end_inset

 an 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Leftrightarrow$
\end_inset


\begin_inset Formula $M_{w'}$
\end_inset

 hält bei irgendeiner Eingabe an 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Leftrightarrow$
\end_inset


\begin_inset Formula $M_{w'}$
\end_inset

 hält auch für Eingabe 
\begin_inset Formula $w'$
\end_inset

 an 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\Leftrightarrow w'\in SH\Leftrightarrow w'\in HP$
\end_inset

.
 
\end_layout

\begin_layout Standard
D.
 h.
 
\begin_inset Formula $M_{w}$
\end_inset

 ist total und akzeptiert 
\begin_inset Formula $HP$
\end_inset

.
 Dies ist aber ein Widerspruch, da wir wissen, dass 
\begin_inset Formula $HP$
\end_inset

 unentscheidbar ist, daraus folgt, dass 
\begin_inset Formula $SH$
\end_inset

 ebenfalls unentscheidbar ist.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Aufgabe 10.2 Reduktion
\end_layout

\begin_layout Subsubsection*
1.
\begin_inset space ~
\end_inset


\begin_inset Formula $L_{1}=\{w\,|\, M_{w}\, hält\, auf\, Eingabe\,0110111\, und\,11101101\}$
\end_inset


\end_layout

\begin_layout Standard
Zu zeigen ist: 
\begin_inset Formula $L_{1}\notin REC$
\end_inset


\end_layout

\begin_layout Standard
Wir zeigen 
\begin_inset Formula $HP\leq L_{1}$
\end_inset

: Gegeben ist eine totale und berechenbare Funktion 
\begin_inset Formula $f:\{0,\,1,\,\#\}^{*}\rightarrow\{0,\,1\}^{*}$
\end_inset

, wobei 
\begin_inset Formula $f(w\#x)=w'$
\end_inset

 gilt, für jedes Codewort 
\begin_inset Formula $w\in\{0,\,1\}^{*}$
\end_inset

und jedes Wort 
\begin_inset Formula $x\in\{0,\,1\}^{*}$
\end_inset

.
 Die TM 
\begin_inset Formula $M_{w'}$
\end_inset

 löscht zunächst die Eingabe, schreibt das Wort 
\begin_inset Formula $x$
\end_inset

 auf das Band und simuliert dann 
\begin_inset Formula $M_{w}$
\end_inset

 auf 
\begin_inset Formula $x$
\end_inset

 und akzeptiert falls die Simulation hält.
 Alle andere Worte 
\begin_inset Formula $v\in\{0,\,1,\,\#\}^{*}$
\end_inset

 werden durch 
\begin_inset Formula $f(v)=\lambda$
\end_inset

 abgebildet.
 Wobei 
\begin_inset Formula $\lambda\notin CODES$
\end_inset

 die Default-TM, die keinen akzeptierenden Zustand hat und nie hält, codiert.
 Sei 
\begin_inset Formula $w\#x\in HP$
\end_inset

.
 Dann gilt 
\begin_inset Formula $f(w\#x)=w'$
\end_inset

, sodass 
\begin_inset Formula $M_{w'}$
\end_inset

 die Wörter 
\begin_inset Formula $0110111$
\end_inset

 und 
\begin_inset Formula $11101101$
\end_inset

 akzeptiert.
 Also gilt 
\begin_inset Formula $w'\in L_{1}$
\end_inset

.
 Sei 
\begin_inset Formula $w\notin HP$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 keine TM codiert, gibt 
\begin_inset Formula $f(w)=\lambda\notin L_{1}$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 von der Form 
\begin_inset Formula $v\#x$
\end_inset

 ist (v codiere dabei eine TM), dann gilt 
\begin_inset Formula $f(w)=w'$
\end_inset

, wobei 
\begin_inset Formula $M_{w'}$
\end_inset

 
\begin_inset Formula $v$
\end_inset

 simuliert, aber nie hält.
 Dann ist 
\begin_inset Formula $w'\notin L_{1}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow L_{1}$
\end_inset

 ist nicht rekursiv, da wir gezeigt haben das man 
\begin_inset Formula $HP$
\end_inset

 auf 
\begin_inset Formula $L_{1}$
\end_inset

reduzieren kann und wir bereits aus der Vorlesung wissen das 
\begin_inset Formula $HP$
\end_inset

 nicht rekursiv ist
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
2.
\begin_inset space ~
\end_inset


\begin_inset Formula $L_{2}=\{w\,|\, M_{w}\, hält\, auf\, jedem\, binären\, Palindrom\}$
\end_inset


\end_layout

\begin_layout Standard
Zu zeigen ist: 
\begin_inset Formula $L_{2}\notin REC$
\end_inset


\end_layout

\begin_layout Standard
Wir zeigen 
\begin_inset Formula $HP\leq L_{2}$
\end_inset

: Gegeben ist eine totale und berechenbare Funktion 
\begin_inset Formula $f:\{0,\,1,\,\#\}^{*}\rightarrow\{0,\,1\}^{*}$
\end_inset

, wobei 
\begin_inset Formula $f(w\#x)=w'$
\end_inset

 gilt, für jedes Codewort 
\begin_inset Formula $w\in\{0,\,1\}^{*}$
\end_inset

und jedes Wort 
\begin_inset Formula $x\in\{0,\,1\}^{*}$
\end_inset

.
 Die TM 
\begin_inset Formula $M_{w'}$
\end_inset

 löscht zunächst die Eingabe, schreibt das Wort 
\begin_inset Formula $x$
\end_inset

 auf das Band und simuliert dann 
\begin_inset Formula $M_{w}$
\end_inset

 auf 
\begin_inset Formula $x$
\end_inset

 und akzeptiert falls die Simulation hält.
 Alle andere Worte 
\begin_inset Formula $v\in\{0,\,1,\,\#\}^{*}$
\end_inset

 werden durch 
\begin_inset Formula $f(v)=\lambda$
\end_inset

 abgebildet.
 Wobei 
\begin_inset Formula $\lambda\notin CODES$
\end_inset

 die Default-TM, die keinen akzeptierenden Zustand hat und nie hält, codiert.
 Sei 
\begin_inset Formula $w\#x\in HP$
\end_inset

.
 Dann gilt 
\begin_inset Formula $f(w\#x)=w'$
\end_inset

, sodass 
\begin_inset Formula $M_{w'}$
\end_inset

 binäre Palindrome akzeptiert.
 Also gilt 
\begin_inset Formula $w'\in L_{2}$
\end_inset

.
 Sei 
\begin_inset Formula $w\notin HP$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 keine TM codiert, gibt 
\begin_inset Formula $f(w)=\lambda\notin L_{2}$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 von der Form 
\begin_inset Formula $v\#x$
\end_inset

 ist (v codiere dabei eine TM), dann gilt 
\begin_inset Formula $f(w)=w'$
\end_inset

, wobei 
\begin_inset Formula $M_{w'}$
\end_inset

 
\begin_inset Formula $v$
\end_inset

 simuliert, aber nie hält.
 Dann ist 
\begin_inset Formula $w'\notin L_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow L_{2}$
\end_inset

 ist nicht rekursiv, da wir gezeigt haben das man 
\begin_inset Formula $HP$
\end_inset

 auf 
\begin_inset Formula $L_{2}$
\end_inset

reduzieren kann und wir bereits aus der Vorlesung wissen das 
\begin_inset Formula $HP$
\end_inset

 nicht rekursiv ist
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
3.
\begin_inset space ~
\end_inset


\begin_inset Formula $L_{3}=\{w\#x\,|M_{w}\, hält\, auf\, x\, nach\, einer\, geraden\, Anzahl\, von\, Schritten\}$
\end_inset


\end_layout

\begin_layout Standard
Zu zeigen ist: 
\begin_inset Formula $L_{3}\notin REC$
\end_inset


\end_layout

\begin_layout Standard
Wir zeigen 
\begin_inset Formula $HP\leq L_{3}$
\end_inset

: Gegeben ist eine totale und berechenbare Funktion 
\begin_inset Formula $f:\{0,\,1,\,\#\}^{*}\rightarrow\{0,\,1\}^{*}$
\end_inset

, wobei 
\begin_inset Formula $f(w\#x)=w'\#x'$
\end_inset

 gilt, für jedes Codewort 
\begin_inset Formula $w\in\{0,\,1\}^{*}$
\end_inset

und jedes Wort 
\begin_inset Formula $x\in\{0,\,1\}^{*}$
\end_inset

.
 Im Unterschied zu 1.
 und 2.
 hat die TM 
\begin_inset Formula $w$
\end_inset

 eine gerade Anzahl an Zuständen.
 Die TM 
\begin_inset Formula $M_{w'}$
\end_inset

 löscht zunächst die Eingabe, schreibt das Wort 
\begin_inset Formula $x$
\end_inset

 auf das Band und simuliert dann 
\begin_inset Formula $M_{w}$
\end_inset

 auf 
\begin_inset Formula $x$
\end_inset

 und akzeptiert falls die Simulation hält.
 Alle andere Worte 
\begin_inset Formula $v\in\{0,\,1,\,\#\}^{*}$
\end_inset

 werden durch 
\begin_inset Formula $f(v)=\lambda$
\end_inset

 abgebildet.
 Wobei 
\begin_inset Formula $\lambda\notin CODES$
\end_inset

 die Default-TM, die keinen akzeptierenden Zustand hat und nie hält, codiert.
 Sei 
\begin_inset Formula $w\#x\in HP$
\end_inset

.
 Dann gilt 
\begin_inset Formula $f(w\#x)=w'\#x$
\end_inset

, sodass 
\begin_inset Formula $M_{w'}$
\end_inset

 akzeptiert wenn eine gerade Anzahl an Schritten durchlaufen wurde.
 Also gilt 
\begin_inset Formula $w'\in L_{3}$
\end_inset

.
 Sei 
\begin_inset Formula $w\notin HP$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 keine TM codiert, gibt 
\begin_inset Formula $f(w)=\lambda\notin L_{3}$
\end_inset

.
 Wenn 
\begin_inset Formula $w$
\end_inset

 von der Form 
\begin_inset Formula $v\#x$
\end_inset

 ist (v codiere dabei eine TM), dann gilt 
\begin_inset Formula $f(w)=w'\#x$
\end_inset

, wobei 
\begin_inset Formula $M_{w'}$
\end_inset

 
\begin_inset Formula $v$
\end_inset

 simuliert, aber nie hält.
 Dann ist 
\begin_inset Formula $w'\notin L_{3}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow L_{3}$
\end_inset

 ist nicht rekursiv, da wir gezeigt haben, dass man 
\begin_inset Formula $HP$
\end_inset

 auf 
\begin_inset Formula $L_{3}$
\end_inset

reduzieren kann und wir bereits aus der Vorlesung wissen das 
\begin_inset Formula $HP$
\end_inset

 nicht rekursiv ist
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Aufgabe 10.3 Reduktion
\end_layout

\begin_layout Subsubsection*
1.
 
\begin_inset Formula $L_{1}=\{w\#w'\,|\, L(M_{w})=L(M_{w'})\}$
\end_inset


\end_layout

\begin_layout Standard
Zu zeigen ist: 
\begin_inset Formula $L_{1}\notin REC$
\end_inset


\end_layout

\begin_layout Standard
Wir zeigen 
\begin_inset Formula $MP\leq L_{1}$
\end_inset

: Gegeben ist eine totale und berechenbare Funktion 
\begin_inset Formula $f$
\end_inset

, wobei 
\begin_inset Formula $f(w\#x)=w\#w'$
\end_inset

 gilt, für jedes Codewort 
\begin_inset Formula $w$
\end_inset

 und jedes Wort 
\begin_inset Formula $x$
\end_inset

.
 Die TM 
\begin_inset Formula $M_{w'}$
\end_inset

 akzeptiert nun 
\begin_inset Formula $x$
\end_inset

 und hält an, alle andere Worte simuliert sie mit 
\begin_inset Formula $M_{w}$
\end_inset

, sodass 
\begin_inset Formula $L(M_{w})=L(M_{w'})$
\end_inset

 genau dann gilt, wenn 
\begin_inset Formula $x\in L(M_{w})$
\end_inset

 und 
\begin_inset Formula $x\in L(M_{w'})$
\end_inset

.
 Wir wissen allerdings bereits, dass das 
\begin_inset Formula $MP$
\end_inset

 nicht entscheidbar ist, sodass 
\begin_inset Formula $MP\leq L_{1}$
\end_inset

 gilt.
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow L_{1}$
\end_inset

 ist nicht rekursiv, da wir gezeigt haben das man 
\begin_inset Formula $MP$
\end_inset

 auf 
\begin_inset Formula $L_{1}$
\end_inset

 reduzieren kann und wir bereits aus der Vorlesung wissen das 
\begin_inset Formula $MP$
\end_inset

 nicht rekursiv ist
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
2.
 
\begin_inset Formula $L_{2}=\{w\#w'\,|\, L(M_{w})\cap L(M_{w'})=\emptyset\}$
\end_inset


\end_layout

\begin_layout Standard
Zu zeigen ist: 
\begin_inset Formula $L_{2}\notin REC$
\end_inset


\end_layout

\begin_layout Standard
Wir zeigen 
\begin_inset Formula $MP\leq L_{2}$
\end_inset

: Gegeben ist eine totale und berechenbare Funktion 
\begin_inset Formula $f$
\end_inset

, wobei 
\begin_inset Formula $f(w\#x)=w'\#w$
\end_inset

 gilt, für jedes Codewort 
\begin_inset Formula $w$
\end_inset

 und jedes Wort 
\begin_inset Formula $x$
\end_inset

.
 Die TM 
\begin_inset Formula $M_{w'}$
\end_inset

 akzeptiert nun 
\begin_inset Formula $x$
\end_inset

 und hält an, alle andere Worte simuliert sie mit 
\begin_inset Formula $M_{w}$
\end_inset

, sodass 
\begin_inset Formula $L(M_{w})\subseteq L(M_{w'})$
\end_inset

 genau dann gilt, wenn 
\begin_inset Formula $x\in L(M_{w})$
\end_inset

.
 Wir wissen allerdings bereits, dass das 
\begin_inset Formula $MP$
\end_inset

 nicht entscheidbar ist, sodass 
\begin_inset Formula $MP\leq L_{2}$
\end_inset

 gilt.
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow L_{2}$
\end_inset

 ist nicht rekursiv, da wir gezeigt haben das man 
\begin_inset Formula $MP$
\end_inset

 auf 
\begin_inset Formula $L_{2}$
\end_inset

 reduzieren kann und wir bereits aus der Vorlesung wissen das 
\begin_inset Formula $MP$
\end_inset

 nicht rekursiv ist
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Aufgabe 10.4 Satz von Rice
\end_layout

\begin_layout Standard
\begin_inset Formula $L_{1}=\{w\,|\, L(M_{w})$
\end_inset

 ist kontextsensitiv
\begin_inset Formula $\}$
\end_inset

.
\end_layout

\begin_layout Standard
Es gibt sowohl kontextsensitive als auch nicht kontextsensitive Sprachen,
 es gibt also Sprachen 
\begin_inset Formula $A\in\mathcal{P}$
\end_inset

 und Sprachen 
\begin_inset Formula $A'\notin\mathcal{P}$
\end_inset

.
 
\begin_inset Formula $\mathcal{P}$
\end_inset

 ist damit nicht trivial, nach Satz von Rice ist die Sprache 
\begin_inset Formula $L_{1}$
\end_inset

 demnach nicht rekursiv.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $L_{A}=\{w\,|\, L(M_{W})=A\}$
\end_inset

 für eine feste Sprache 
\begin_inset Formula $A\in RE.$
\end_inset


\end_layout

\begin_layout Standard
Es gibt für jede Sprache 
\begin_inset Formula $A$
\end_inset

 die Komplementsprache 
\begin_inset Formula $\bar{A}$
\end_inset

, damit ist 
\begin_inset Formula $\mathcal{P}$
\end_inset

 nicht trivial und die Sprache 
\begin_inset Formula $L_{A}$
\end_inset

 demnach nicht rekursiv.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{flushright} $
\backslash
blacksquare$ 
\backslash
end{flushright}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
